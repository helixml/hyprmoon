services:
  hyprland-moonlight:
    build:
      context: .
      dockerfile: Dockerfile.moonlight
    runtime: nvidia
    volumes:
      - .:/workspace
      - ./test_config:/test_config
      - ./test_output:/test_output
      - /dev/dri:/dev/dri
      - ccache:/ccache
    ports:
      - "48989:47989"  # HTTP
      - "49010:48010"  # RTSP
      - "48999:47999"  # Control
    environment:
      # GPU acceleration settings from helix example (EXACTLY matching)
      - WLR_RENDERER=gles2
      - WLR_BACKENDS=headless
      - WLR_NO_HARDWARE_CURSORS=1
      - WLR_HEADLESS_OUTPUTS=1
      - __GL_THREADED_OPTIMIZATIONS=1
      - __GL_SYNC_TO_VBLANK=1
      - LIBGL_ALWAYS_SOFTWARE=0
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - LIBGL_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri
      - LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri
      - EGL_PLATFORM=drm
      - GBM_BACKEND=nvidia-drm
      - __GLX_VENDOR_LIBRARY_NAME=nvidia
      - WLR_DRM_DEVICES=/dev/dri/card1
      - WLR_RENDERER_ALLOW_SOFTWARE=1
      - WLR_DRM_NO_ATOMIC=1
      - GPU_RENDER_NODE=/dev/dri/renderD128
      - GST_GL_DRM_DEVICE=/dev/dri/renderD128
      - GST_GL_API=gles2
      - GST_GL_WINDOW=surfaceless
      # Runtime directories
      - XDG_RUNTIME_DIR=/tmp/runtime-root
      - WAYLAND_DISPLAY=wayland-0
    command: |
      bash -c "
        echo 'üöÄ Building HyprMoon with real moonlight integration...'
        cd /workspace
        
        # Build Hyprland with moonlight integration first
        echo 'üèóÔ∏è Building Hyprland with moonlight integration...'
        meson setup build --prefix=/usr --buildtype=release -Dwith_moonlight=true || exit 1
        ninja -C build || exit 1
        
        # Install Hyprland so it's available in PATH
        echo 'üì¶ Installing Hyprland...'
        ninja -C build install || exit 1
        
        # Check if binary exists
        echo 'üîç Checking Hyprland installation...'
        which Hyprland || ls -la /usr/bin/Hyprland || ls -la ./build/src/Hyprland || find /workspace -name Hyprland -type f
        
        # Set up runtime directory (following helix pattern)
        mkdir -p /tmp/runtime-root
        chmod 700 /tmp/runtime-root
        
        # Start Hyprland in background with proper environment
        echo 'üéÆ Starting Hyprland compositor with moonlight integration...'
        XDG_RUNTIME_DIR=/tmp/runtime-root WAYLAND_DISPLAY=wayland-0 /usr/bin/Hyprland --config /test_config/hyprland.conf --i-am-really-stupid &
        HYPR_PID=\$!
        
        # Wait for Hyprland to start and create wayland socket
        echo '‚è≥ Waiting for Hyprland to create wayland socket...'
        timeout=15
        while [ \$timeout -gt 0 ] && [ ! -S \"/tmp/runtime-root/wayland-0\" ]; do
            sleep 1
            timeout=\$((timeout - 1))
        done
        
        if [ -S \"/tmp/runtime-root/wayland-0\" ]; then
            echo '‚úÖ Hyprland started successfully, wayland socket created'
        else
            echo '‚ö†Ô∏è  Hyprland may not have started properly (no wayland socket found)'
        fi
        
        echo '‚úÖ HyprMoon system running!'
        echo 'Hyprland PID: '\$HYPR_PID
        echo 'Moonlight should be streaming on:'
        echo '  HTTP:    http://localhost:47989'
        echo '  HTTPS:   https://localhost:47984'  
        echo '  RTSP:    rtsp://localhost:48010'
        echo '  Control: localhost:47999'
        echo '  Video:   localhost:48000'
        echo '  Audio:   localhost:48002'
        
        # Keep running and show logs
        sleep 15
        echo 'üìä Moonlight server status:'
        ps aux | grep -E '(Hyprland|moonlight)' || true
        
        # Create output directory
        mkdir -p /test_output
        
        # Debug crash report directory issue with proper sorting and debug logging
        echo 'üß™ Debugging crash report and user permissions...'
        chmod +x /test_config/debug_crash_report_fixed.sh
        /test_config/debug_crash_report_fixed.sh
        
        # Run the REAL E2E test
        echo 'üß™ Running REAL E2E Test...'
        chmod +x /test_config/real_e2e_test.sh
        /test_config/real_e2e_test.sh
        
        # Show final status
        echo 'üìà Final test results:'
        ls -la /test_output/ || true
        
        # Keep running for a bit longer to allow monitoring
        sleep 30
        
        echo 'üõë Test complete, shutting down...'
      "
    tmpfs:
      - /tmp:rw,size=200m
    container_name: hyprland_moonlight_real
    devices:
      - /dev/dri
    group_add:
      - video

  moonlight-client:
    image: jrottenberg/ffmpeg:4.4-alpine
    depends_on:
      - hyprland-moonlight
    volumes:
      - .:/workspace
      - ./test_config:/test_config
    working_dir: /workspace
    entrypoint: /bin/sh
    command: 
      - -c
      - |
        apk add --no-cache curl netcat-openbsd imagemagick
        chmod +x /test_config/real_capture_stream.sh
        /test_config/real_capture_stream.sh
    container_name: moonlight_real_client

volumes:
  ccache:
    driver: local

networks:
  default:
    driver: bridge